// <auto-generated />
using System;
using JewelleryMine.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace JewelleryMine.Migrations
{
    [DbContext(typeof(JewelContext))]
    partial class JewelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("JewelleryMine.Model.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rings"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Watches"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pendants"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bracelets"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Chains"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Charms"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Necklace"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Brooches"
                        });
                });

            modelBuilder.Entity("JewelleryMine.Model.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("BigPreview")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("ImageContent")
                        .HasColumnType("bytea");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte[]>("SmallPreview")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("JewelleryMine.Model.Entities.Jewel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid?>("PhotoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Price")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PhotoId");

                    b.ToTable("Jewels");
                });

            modelBuilder.Entity("JewelleryMine.Model.Entities.JewelCollection", b =>
                {
                    b.Property<Guid>("JewelId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductCollectionId")
                        .HasColumnType("uuid");

                    b.HasKey("JewelId", "ProductCollectionId");

                    b.HasIndex("ProductCollectionId");

                    b.ToTable("JewelCollections");
                });

            modelBuilder.Entity("JewelleryMine.Model.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("JewelleryMine.Model.Entities.ProductCollection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductCollections");
                });

            modelBuilder.Entity("JewelleryMine.Model.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthPhone")
                        .HasColumnType("text");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeviceOs")
                        .HasColumnType("integer");

                    b.Property<string>("DeviceToken")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Guid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastActivityDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("LastActivityEvent")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<Guid?>("PhotoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Pin")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JewelleryMine.Model.Entities.Jewel", b =>
                {
                    b.HasOne("JewelleryMine.Model.Entities.Category", "Category")
                        .WithMany("Jewels")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JewelleryMine.Model.Entities.Material", "Material")
                        .WithMany("Jewels")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JewelleryMine.Model.Entities.Image", "Photo")
                        .WithMany("Jewels")
                        .HasForeignKey("PhotoId");
                });

            modelBuilder.Entity("JewelleryMine.Model.Entities.JewelCollection", b =>
                {
                    b.HasOne("JewelleryMine.Model.Entities.Jewel", "Jewel")
                        .WithMany("JewelCollections")
                        .HasForeignKey("JewelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JewelleryMine.Model.Entities.ProductCollection", "ProductCollection")
                        .WithMany("JewelCollections")
                        .HasForeignKey("ProductCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JewelleryMine.Model.Entities.User", b =>
                {
                    b.HasOne("JewelleryMine.Model.Entities.Image", "Photo")
                        .WithMany("Users")
                        .HasForeignKey("PhotoId");
                });
#pragma warning restore 612, 618
        }
    }
}
